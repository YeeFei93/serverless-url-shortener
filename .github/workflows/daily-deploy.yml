name: Daily AWS Resource Deployment (8AM Singapore Time)

on:
  # Run daily at 8:00 AM Singapore Time (00:00 UTC), including weekends
  schedule:
    - cron: '0 0 * * *'
  
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      destroy_first:
        description: 'Destroy existing resources first'
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0

jobs:
  deploy:
    name: Deploy Serverless URL Shortener (8AM SGT)
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write  # Required for OIDC

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GitHubActions-DailyDeploy
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Build Lambda packages
      run: |
        chmod +x ./build.sh
        ./build.sh

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -out=tfplan

    - name: Optional - Destroy existing resources
      if: ${{ github.event.inputs.destroy_first == 'true' }}
      working-directory: terraform
      run: terraform destroy -auto-approve

    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve tfplan

    - name: Output deployment info
      working-directory: terraform
      run: |
        echo "## Deployment Complete! üöÄ" >> $GITHUB_STEP_SUMMARY
        echo "### Infrastructure Outputs:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        terraform output >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
        echo "### Deployment Time:" >> $GITHUB_STEP_SUMMARY
        echo "$(date) (Deployed at 8:00 AM Singapore Time)" >> $GITHUB_STEP_SUMMARY

    - name: Verify deployment health
      run: |
        # Wait a bit for resources to be fully ready
        sleep 30
        
        # Get the API endpoint from terraform output
        API_ENDPOINT=$(cd terraform && terraform output -raw api_gateway_url 2>/dev/null || echo "")
        
        if [ ! -z "$API_ENDPOINT" ]; then
          echo "Testing API endpoint: $API_ENDPOINT"
          
          # Test OPTIONS request (CORS preflight)
          curl -X OPTIONS -i "$API_ENDPOINT/shorten" || true
          
          echo "‚úÖ Deployment health check completed"
        else
          echo "‚ö†Ô∏è Could not retrieve API endpoint for health check"
        fi

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: deploy
    if: always()  # Run even if deploy fails
    
    steps:
    - name: Send success notification
      if: needs.deploy.result == 'success'
      run: |
        echo "‚úÖ Daily deployment completed successfully at $(date)"
        echo "üá∏üá¨ Deployed at 8:00 AM Singapore Time (including weekends)"
        # Add webhook/email notification here if needed
        
    - name: Send failure notification  
      if: needs.deploy.result == 'failure'
      run: |
        echo "‚ùå Daily deployment failed at $(date)"
        echo "üá∏üá¨ Failed during 8:00 AM Singapore Time deployment"
        # Add webhook/email notification here if needed
